/* eslint-disable react-hooks/exhaustive-deps */
import Head from "next/head";
import { GamePlan } from "../components/GamePlan";
import { CarouselFade } from "../components/CarouselFade";
import { CategorySearch } from "../components/CategorySearch";
import {
  Box,
  Flex,
  Grid,
  GridItem,
  StackDivider,
  VStack,
} from "@chakra-ui/react";
import { SearchIcon } from "@chakra-ui/icons";
import { planCollectionAtom } from "../lib/recoil/atoms/planCollectionAtom";
import { useRecoilState } from "recoil";
import React, { useEffect, useState } from "react";
import { profileCollectionAtom } from "../lib/recoil/atoms/profileCollectionAtom";
import { collection, onSnapshot, query } from "firebase/firestore";
import {db} from "../lib/firebase/firebaseConfig";

const Home = () => {
  //全てのプラン情報を管理するRECOILのSTATEへのSET関数を宣言
  const [showPlan, setShowPlan] = useState<ShowPlan[]>([]);

  //FIREBASEからすべてのプラン情報を取得
  const [planCollections, setPlanCollections] =
    useRecoilState(planCollectionAtom);

  //プロフィールデータを取得
  const [profileCollections, setProfileCollections] = useRecoilState(
    profileCollectionAtom
  );

  const sortPlanHandle = (e: { target: { textContent: string } }) => {
    setShowPlan([]);
    //一致するジャンル・タイトルのプランでフィルター
    const sortPlan = planCollections.filter((plan) => {
      if (
        plan.genreCategory === e.target.textContent ||
        plan.titleCategory === e.target.textContent
      ) {
        return plan;
      } else if (e.target.textContent === "全てのプラン") {
        return planCollections;
      }
    });
    sortPlan.map((plan) => {
      profileCollections.map((profile) => {
        if (plan.userId === profile.userId) {
          const planData = {
            planId: plan.planId,
            planTitle: plan.planTitle,
            planImage: plan.planImage,
            userName: profile.userName,
            price: plan.price,
            userAvatar: profile.userAvatar,
            review: profile.review,
            genreCategory: plan.genreCategory,
            titleCategory: plan.titleCategory,
          };
          setShowPlan((prev) => [...prev, planData]);
        }
      });
    });
  };

  useEffect(() => {
    const profileQuery = query(collection(db, "planCollection"));
    const planUnsubscribe = onSnapshot(profileQuery, (querySnapshot) => {
      const planData: Plan[] = [];
      querySnapshot.forEach((doc) => {
        planData.push(Object.assign({ planId: doc.id, ...doc.data() }));
      });
      console.log("プラン", planData);
      setPlanCollections(planData);
    });
    const planQuery = query(collection(db, "profileCollection"));
    const profileUnsubscribe = onSnapshot(planQuery, (querySnapshot) => {
      const profileData: User[] = [];
      querySnapshot.forEach((doc) => {
        profileData.push(Object.assign({ userId: doc.id, ...doc.data() }));
      });
      console.log("プロフィール", profileData);
      setProfileCollections(profileData);
    });
    return () => {
      planUnsubscribe();
      profileUnsubscribe();
    };
  }, []);

  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* carousel image */}
      <CarouselFade />

      {/* mainContents */}
      <Grid
        templateAreas={`
        "nav main"
        "footer footer"`}
        gap="2"
        fontWeight="bold"
        gridTemplateColumns={"300px 1fr"}
        mt="3"
      >
        {/* search category */}
        <GridItem
          area={"nav"}
          bg="whiteAlpha.800"
          borderRadius="10"
          ml="10"
          p="2"
        >
          <VStack
            divider={<StackDivider borderColor="purple.300" />}
            spacing={4}
            align="stretch"
          >
            <Box h="40px">
              <span style={{ marginLeft: 10 }}>
                <SearchIcon />
                <span>ソート</span>
              </span>
            </Box>
            <CategorySearch
              category="全てのプラン"
              onClickHandle={sortPlanHandle}
            />
            <CategorySearch
              category="FPS・TPS"
              onClickHandle={sortPlanHandle}
            />
            <CategorySearch category="MOBA" onClickHandle={sortPlanHandle} />
            <CategorySearch category="格闘" onClickHandle={sortPlanHandle} />
            <CategorySearch
              category="スポーツ"
              onClickHandle={sortPlanHandle}
            />
            <CategorySearch
              category="エーペックスレジェンズ"
              onClickHandle={sortPlanHandle}
            />
          </VStack>
        </GridItem>

        {/* show plan */}
        <GridItem pl="2" area={"main"} ml="1">
          <Flex
            align="center"
            wrap="wrap"
            bg="whiteAlpha.800"
            maxW="1000px"
            borderRadius="10"
          >
            <GamePlan showPlan={showPlan} />
          </Flex>
        </GridItem>
      </Grid>
    </Box>
  );
};
export default Home;
